

	 --     TEACHER-FORCING PREDICOR
	 --     predicts Mackey-Glass chaos generator
	 -------------------------------------------------------------
	 display N3 |  display C8 |  display R |  scale=1
	 -------------------------------------------------------------
	 TMAX=500 |  DT=0.04 |  NN=10000
	 a=0.2 |  b=0.1 |  c=10 |  --   for Mackey-Glass
	 tau=25 |  s=10 |  --         s=10 initializes buffer
	 ARRAY DD[1000] |  --           time-delay buffer
	 --------------------------------------------------------------
	 m=50 |  --                                 predictor delay
	 nx=1 |  --                                        single input
	 nv=17 |  --      number of hidden-layer neurons
	 --
	 ARRAY signal[m],y[1],error[1]
	 --
	 --  input, bias, hidden layer (context layer)
	 ARRAY x[1]+x0[1]+f[1]=xx |  x0[1]=1
	 ARRAY v[nv],deltav[nv]
	 ARRAY WW1[nv,nx+2],W2[1,nv]
	 --
	 for i=1 to nv |  for k=1 to nx+2 |  -- initialize
	     WW1[i,k]=0.1*ran()
	     next  |  next
	 -----------------------------------------------------------
	 lrate1=0.002 |  lrate2=0.001
	 Tnoise=0.0
	 --
	 N=18 |  --                   number of training runs
	 Switch=1 |  -- teacher forcing
	 for i=1 to N |  drun  |  next
	 ---------
	 write 'type go for prediction tests' |  STOP
	 Switch=0
	 lrate1=0 |  lrate2=0 |  drun  |  -- test run
	 write TMAX*m/NN
	 -----------------------------------------------------------
	 DYNAMIC
	 -----------------------------------------------------------
	 tdelay Sd=DD,s,tau |  -- Mackey-Glass time series
	 d/dt s=a*Sd/(1+Sd^c)-b*s
	 OUT  |  --                   sampled data from here on!
	 target=0.5*s
	 --------------------------------- 
	 Vector signal=signal{-1} |  signal[1]=target+Tnoise*ran()
	 x[1]=signal[m]
	 Vector v=tanh(WW1*xx) |  --              includes bias
	 Vector y=W2*v |  --    no limiter needed on output!
	 --
	 Vector error=target-y
	 Vector f=Switch*target+(1-Switch)*y |  -- teacher forcing
	 Vector deltav=W2%*error*(1-v^2) |  -- backprop
	 DELTA WW1=lrate1*deltav*xx
	 DELTA W2=lrate2*error*v
	 -----------------------------
	 ersqx50=50*error[1]^2-0.5*scale
	 errorx5=5*error[1]-0.5*scale
	 dispt y[1],ersqx50,target,errorx5

