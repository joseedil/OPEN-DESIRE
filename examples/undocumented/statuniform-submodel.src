

	 -- STUDY SAMPLE AVERAGES, SAMPLE VARIANCES,
	 --    AND THEIR SAMPLING DISTRIBUTIONS
	 ------------------------------------------------------------------
	 ARRAY x$[1]
	 SUBMODEL STAT(x$)
	   Vector xavg=xavg+(x$-xavg)/t
	   Vector xxavg=xxavg+(x$^2-xxavg)/t
	   Vector xvar=xxavg-xavg^2
	   ----------------------------------------------------------------
	   --  compute the sampling distributions by
	   --    averaging statistics over m different samples
	   --
	   DOT XSum=xavg*1 |  DOT XXSum=xavg*xavg
	   XAvg=XSum/n |  XXAvg=XXSum/n
	   Xvar=XXAvg-XAvg^2
	   --
	   --------->   offset and rescale the display
	   --
	   XAVG=10*XAvg-0.5*scale
	   xvaro10=0.1*xvar[1] |  Xvarx100=100*Xvar
	   dispt XAVG,Xvarx100,xavg[1],xvaro10
	   end
	 ------------------------------------------------------------------
	 -- Parzen-window probability-density estimation
	 --
	 SUBMODEL PARZEN()
	   xx=2*t-TMAX |  --                   display sweep
	   Vector f=beta*exp(alpha*(xx-x)*(x-xx))
	   Vector g=beta*exp(alpha*(xx-xavg)*(xavg-xx))
	   DOT F=f*1 |  DOT G=g*1
	   --                                 offset display
	   F=0.2*F-scale |  G=0.2*G-scale
	   dispxy xx,F,G
	   end
	 ------------------------------------------------------------------
	 -- first run computes sample averages and variances
	 --    as functions of the sample size t. Arrays are
	 --    initialized to 0 by default, then t starts at t=1
	 --    with xavg=x, goes to t=NN=nmax                 
	 ------------------------------------------------------------------
	 display N1 |  display C8 |  display R
	 nmax=10000 |  --  maximum sample size
	 n=1000 |  --    number of replicated experiments
	 --
	 ARRAY x[n],xavg[n],xxavg[n],xvar[n],f[n],g[n]
	 ------------------------------------------------------------------
	 NN=3000
	 x0=0 |  --   "true" value of x
	 scale=0.2
	 gamma=0.3
	 drun
	 write 'type go to continue' |  STOP
	 ------------------------------------------------------------------
	 --  second run estimates probability densities
	 --                        for the sample size nmax	
	 write "please wait!"
	 display Y |  scale=15
	 h=0.07 |  --                  Parzen-window width
	 alpha=1/(2*h^2)
	 scale=2 |  Ascale=3 |  -- scaling
	 beta=Ascale/(h*n*sqrt(2*PI))
	 --                                                         
	 t=0 |  TMAX=20 |  NN=8000 |  -- (note that xx=2*t-TMAX)
	 drun READOUT
	 -----------------------------
	 DYNAMIC
	 -----------------------------
	 --  t is the sample size; note recursive averaging
	 --
	 Vector x=ran()+x0
	 invoke STAT(x)
	 --	
	    label READOUT
	 invoke PARZEN()

