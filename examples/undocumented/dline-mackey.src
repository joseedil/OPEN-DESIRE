

	 --     DELAY-LINE/BACKPROP PREDICTOR
	 --     predicts Mackey-Glass chaos generator
	 ----------------------------------------------------------------
	 display N3 |  display C8 |  display R |  scale=2
	 --                                            for Mackey-Glass	 
	 TMAX=500 |  DT=0.04 |  NN=12500
	 a=0.2 |  b=0.1 |  c=10
	 tau=25
	 --
	 ARRAY DD[1000] |  --       time-delay buffer
	 s=10 |  --             initialize time delay buffer
	 ---------------------------------------------------------------
	 m=50 |  --                                    predictor delay
	 nx=20 |  --                 number of delay-line taps
	 nv=17 |  --      number of hidden-layer neurons
	 --
	 ARRAY signal[m],y[1],error[1]
	 ARRAY x[nx]+x0[1]=xx |  x0[1]=1 |  --  delay line
	 ARRAY v[nv],deltav[nv] |  --              hidden layer
	 ARRAY WW1[nv,nx+1],W2[1,nv]
	 --
	 for i=1 to nv |  for k=1 to nx+1 |  -- initialize
	     WW1[i,k]=0.1*ran()
	     next  |  next
	 -----------------------------------------------------------
	 lrate1=0.01 |  lrate2=0.003
	 --
	 N=10
	 for i=1 to N |  drun  |  next  |  --  N training runs
	 write "type go for a test" |  STOP
	 lrate1=0 |  lrate2=0 |  drun  |  -- test run
	 write "m corresponds to TMAX/";NN/m
	 -----------------------------------------------------------
	 DYNAMIC
	 -----------------------------------------------------------
	 tdelay Sd=DD,s,tau |  --  Mackey-Glass time series
	 d/dt s=a*Sd/(1+Sd^c)-b*s
	 OUT  |  --                  sampled data from here on!
	 target=s-0.85
	 -----------------------------------------------------------
	 Vector signal=signal{-1} |  signal[1]=target
	 Vector x=x{-1} |  x[1]=signal[m]
	 -------------
	 Vector v=tanh(WW1*xx) |  --                      note bias
	 Vector y=W2*v |  --          no limiter needed on output!
	 --
	 Vector error=target-y
	 Vector deltav=W2%*error*(1-v^2)
	 --
	 DELTA WW1=lrate1*deltav*xx
	 DELTA W2=lrate2*error*v
	 -----------------------------------------------------------
	 Y=y[1]+0.5*scale |  TARGET=target+0.5*scale
	 errorx10=10*error[1]-0.5*scale
	 dispt Y,errorx10,TARGET

