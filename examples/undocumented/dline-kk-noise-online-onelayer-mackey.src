

	 --     ONE-STEP ONE-LAYER PREDICTOR
	 --         predicts Mackey-Glass  time series
	 -------------------------------------------------------------
	 display N3 |  display C8 |  display R |  scale=1
	 -------------------------------------------------------------
	 TMAX=300 |  DT=0.04 |  NN=TMAX/DT+1
	 a=0.2 |  b=0.1 |  c=10 |  --   for Mackey-Glass
	 tau=25 |  s=10 |  --         s=10 initializes buffer
	 ARRAY DD[1000] |  --           time-delay buffer
	 -------------------------------------------------------------
	 m=2 |  --                                predictor delay 
	 nx=10 |  --             number of delay-line taps
	 ARRAY signal[2*m]
	 ARRAY x[nx],y[1],deltay[1],error[1],W[1,nx]
	 --
	 for k=1 to nx |  --      initialize
	   W[1,k]=0.1*ran()
	   next
	 -------------------------------          online network
	 ARRAY X[nx],Y[1],ERROR[1]
	 -------------------------------------    parameters
	 lrate=0.001
	 Tnoise=0.05 |  --               try more noise!
	 --
	 N=8 |  --                   make N training runs
	 for i=1 to N |  drun  |  next
	 ---------
	 write 'type go for prediction tests' |  STOP
	 lrate=0 |  drun  |  drun  |  -- test runs
	 -----------------------------------------------------------
	 DYNAMIC
	 -----------------------------------------------------------
	 tdelay Sd=DD,s,tau |  -- Mackey-Glass
	 d/dt s=a*Sd/(1+Sd^c)-b*s
	 OUT  |  --        sampled data from here on!
	 TARGET=0.5*s-0.4
	 ---------------------------------------------------------------
	 NOISE=Tnoise*gauss(0)
	 Vector signal=signal{-1}
	 signal[1]=TARGET+NOISE
	 target=signal[m+1] |  --  train net trains on delayed signal
	 Vector x=x{-1} |  x[1]=signal[2*m] |  -- delay line
	 Vector y=tanh(W*x)
	 --
	 Vector error=target-y |  --     LMS Algorithm
	 Vector deltay=error*(1-y^2)
	 DELTA W=lrate*deltay*x
	 ---------------------------------------
	 Vector X=X{-1} |  X[1]=signal[m+1] |  --  "present" online input
	 Vector Y=W*X
	 Vector ERROR=TARGET-Y
	 -------------------------          
	 YY=Y[1]+0.5*scale |  --           stripchart-type display        
	 Target=TARGET+0.5*scale
	 ERSQx20=20*ERROR[1]^2-0.5*scale
	 ERRORx1=ERROR[1]-0.5*scale
	 errorx1=error[1]-0.5*scale
	 dispt YY,Target,ERRORx1,errorx1,NOISE

