

	 --     SOFTMAX COMPETITIVE LEARNING
	 -------------------------------------------------------
	 display Q |  display N1 |  display C8 |  display R
	 nx=2 |  --                              number of inputs
	 n=9 |  --          number of competitive-layer neurons
	 --
	 ARRAY x[nx]
	 ARRAY v[n],v1[n],q[n],y[nx],yy[nx],W[n,nx]
	 ARRAY error[nx],z[nx]
	 ARRAY h[n]
	 --
	 for i=1 to n |  for k=1 to nx |  -- initialize W
	     W[i,k]=0.1*ran() |  next  |  next
	 ----------------------------------------------------------------
	 --                           set experiment parameters
	 lrate=0.01 |  --                             learn rate
	 kappa=0.9999 |  lrate0=0.00001 |  --     decay lrate
	 c=60
	 lrate1=lrate*c
	 NN=200000
	 ------------------------------------------------------
	 drun  |  --                 simulation run (NN trials)
	 NNold=NN |  NN=5000
	 drun  |  --                    short run shows results
	 write 'type go for a check run' |  STOP
	 NN=1000 |  a=1/NN
	 lrate=0 |  lrate0=0
	 for i=1 to n |  h[i]=1.0E-25 |  next
	 drun
	 ONE=0 |  H=0 |  --     initialize checksum and entropy
	 for i=1 to n
	   h[i]=a*h[i] |  --         statistical relative frequencies
	   ONE=ONE+h[i] |  --               accumulate checksum
	   H=H-h[i]*ln(h[i]) |  --           accumulate entropy
	   next
	 -----------------------------          display results
	 write h |  write  |  write v
	 write 'H =  ';H/ln(2);' bits','        checksum =  ';ONE
	 write  |  write 'log2(n) = ';ln(n)/ln(2)
	 write 'type go to see the template array' |  STOP
	 write  |  write W
	 ------------------------------------------------------
	 DYNAMIC
	 -------------------------------------------------------
	 Vector x=ran()
	 lrate1=lrate0+lrate1*kappa |  --     decrease learn rate
	 Vector v=exp(c*W*x) |  DOT vsum=v*1
	 Vector v=v/vsum |  -- probability estimate
	 Vector z=W%*v |  -- reconstruct templates
	 Vector error=x-z
	 --
	 Vector v1=W*error*v*(1-v)
	 DELTA W=lrate1*v1*x
	 DOT enormsqr=error*error
	 ------------------------------------------------
	 Vectr delta h=v
	 ------------------------------------------------------
	 DISPXY z[1],z[2] |  --   ,x[1],x[2]

