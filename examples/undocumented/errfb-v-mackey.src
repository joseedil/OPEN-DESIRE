

	 --     NONLINEAR PREDICTOR
	 --     predicts Mackey-Glass chaos generator
	 --      trains  with error  feedback, then
	 --          runs with v feedback alone
	 ---------------------------------------------------------------
	 display N3 |  display C8 |  display R |  scale=2
	 TMAX=500 |  DT=0.025 |  NN=TMAX/DT+1
	 --                                        for Mackey-Glass
	 a=0.2 |  b=0.1 |  c=10
	 tau=25
	 ARRAY DD[1000] |  --        time-delay buffer
	 s=10 |  --    initialize time delay buffer
	 --------------------------------------------------------------
	 m=50 |  --   predictor delay (try m=100, too)
	 nv=17 |  --      number of hidden-layer neurons
	 --
	 ARRAY signal[m],y[1]
	 --
	 --  input, bias, hidden layer (context layer)
	 ARRAY x[1]+x0[1]+error[1]=xx |  x0[1]=1
	 ARRAY v[nv],deltav[nv]
	 ARRAY WW1[nv,3],W2[1,nv]
	 --
	 for i=1 to nv |  for k=1 to 3 |  -- initialize
	     WW1[i,k]=0.1*ran()
	     next  |  next
	 -----------------------------------------------------------
	 lrate1=0.0003 |  lrate2=0.0002
	 Tnoise=0.0
	 --
	 switch=1
	 N=20 |  --                  number of training runs
	 for i=1 to N |  drun  |  next
	 ---------
	 write 'type go for prediction tests' |  STOP
	 switch=0
	 lrate1=0 |  lrate2=0 |  drun  |  drun  |  -- test runs
	 -----------------------------------------------------------
	 DYNAMIC
	 -----------------------------------------------------------
	 tdelay Sd=DD,s,tau |  -- Mackey-Glass time series
	 d/dt s=a*Sd/(1+Sd^c)-b*s
	 ---------------------------------------------------------------
	 OUT  |  --   we use sampled data from now on!
	 target=s-1
	 Vector signal=signal{-1} |  signal[1]=target+Tnoise*ran()
	 x[1]=signal[m]
	 Vector v=tanh(WW1*xx) |  --                          note bias
	 Vector y=W2*v |  --  no limiter needed on output!
	 --
	 Vector error=switch*(target-y)
	 Vector deltav=W2%*error*(1-v^2) |  -- backprop
	 DELTA WW1=lrate1*deltav*xx
	 DELTA W2=lrate2*error*v
	 -----------------------------                 stripchart-type disp
	 Y=y[1]+0.5*scale |  TARGET=target+0.5*scale
	 errorx10=10*(target-y[1])-0.5*scale
	 dispt Y,errorx10,TARGET

