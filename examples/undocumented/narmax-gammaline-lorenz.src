

	 --     NARMAX/GAMMA-LINE PREDICTOR
	 --     predicts Lorenz chaotic time series
	 ------------------------------------------------------------------
	 display N1 |  display C8 |  display Q |  scale=2
	 TMAX=150 |  DT=0.00001 |  NN=1.5e+06
	 --------------------------------------------------------------
	 m=50 |  --                        predictor delay       
	 nx=10 |  --       number of input-line neurons
	 nf=10 |  --       number of feedback-line neurons
	 nv=17 |  --      number of hidden-layer neurons
	 --
	 ARRAY signal[m],y[1],error[1]
	 ARRAY x[nx]+x0[1]+feedback[nf]=xx |  x0[1]=1
	 ARRAY v[nv]+v0[1]=vv |  v0[1]=1
	 ARRAY deltav[nv]+deltav0[1]=deltavv |  deltav0[1]=1
	 ARRAY WW1[nv,nx+nf+1],WW2[1,nv+1]
	 --
	 for i=1 to nv |  for k=1 to nx+nf+1 |  -- initialize
	     WW1[i,k]=0.1*ran()
	     next  |  next
	 -----------------------------------------------------------
	 lrate1=0.04 |  lrate2=0.015
	 Tnoise=0.00
	 mu=0.08 |  --                for gamma delay line
	 --
	 --                        Lorenz-system parameters
	 b=28 |  c=2.6667 |  A=10
	 --
	 N=2 |  --                         number of training runs
	 for i=1 to N |  drun  |  next
	 ---------
	 write 'type go for prediction tests' |  STOP
	 lrate1=0 |  lrate2=0 |  drun  |  -- test run
	 -----------------------------------------------------------
	 DYNAMIC
	 ----------------------------------------------------------
	 d/dt X=A*(Y-X)+0.001 |  --     Lorenz attractor
	 d/dt Y=X*(b-Z)-Y
	 d/dt Z=X*Y-c*Z
	 OUT  |  --           sampled data from now on!
	 target=0.05*X-0.1
	 ---------------------------------------------------------------
	 Vector signal=signal{-1} |  signal[1]=target+Tnoise*ran()
	 Vector x=x+mu*(x{-1}-x) |  x[1]=signal[m] |  --  gamma line
	 Vector v=tanh(WW1*xx) |  --                          note bias
	 Vector y=WW2*vv |  --              no limiter needed on output!
	 --
	 Vector feedback=feedback+mu*(feedback{-1}-feedback)
	 feedback[1]=y[1]
	 --
	 Vector error=target-y
	 Vector deltavv=WW2%*error*(1-vv^2)
	 DELTA WW1=lrate1*deltav*xx
	 DELTA WW2=lrate2*error*vv
	 ----------------------------------------  stripchart-type display
	 Y=y[1]+0.5*scale
	 TARGET=target+0.5*scale
	 errorx10=10*error[1]-0.5*scale
	 ss=signal[m]+0.5*scale
	 dispt Y,errorx10,TARGET

