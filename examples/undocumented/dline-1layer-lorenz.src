

	 --         ONE-LAYER NONLINEAR PREDICTOR
	 --                          predicts Lorenz  time series
	 ----------------------------------------------------------------
	 display N3 |  display C8 |  display R |  scale=2
	 TMAX=50 |  DT=0.0001 |  NN=5.0e+05
	 ----------------------------------------------------------------
	 --                        Lorenz-system parameters
	 b=28 |  c=2.6667 |  A=10
	 ----------------------------------------------------------------
	 m=50 |  --                                predictor delay 
	 nx=10 |  --                 number of delay-line taps
	 ARRAY signal[m]
	 ARRAY x[nx]+x0[1]=xx |  x0[1]=1
	 ARRAY y[1],deltay[1],error[1],WW[1,nx+1]
	 --
	 for k=1 to nx+1 |  --      initialize
	   WW[1,k]=0.1*ran()
	   next
	 -------------------------------------  parameters
	 lrate=0.001
	 Tnoise=0.00 |  --               try more noise!
	 --
	 N=8 |  --                   make N training runs
	 for i=1 to N |  drun  |  next
	 ---------
	 write 'type go for prediction tests' |  STOP
	 lrate=0 |  drun  |  drun  |  -- test runs
	 -----------------------------------------------------------
	 DYNAMIC
	 -----------------------------------------------------------
	 d/dt X=A*(Y-X)+0.001 |  --     Lorenz attractor
	 d/dt Y=X*(b-Z)-Y
	 d/dt Z=X*Y-c*Z
	 OUT  |  --                  sampled data from here on!
	 target=0.05*X
	 ---------------------------------------------------------------
	 Vector signal=signal{-1} |  signal[1]=target+Tnoise*ran()
	 Vector x=x{-1} |  x[1]=signal[m] |  -- input delay line
	 Vector y=tanh(WW*xx)
	 --
	 Vector error=target-y
	 Vector deltay=error*(1-y^2)
	 DELTA WW=lrate*deltay*xx |  -- LMS algorithm
	 --------------------------------------------------    
	 Y=y[1]+0.5*scale |  Target=target+0.5*scale
	 errorx10=10*error[1]-0.5*scale
	 dispt Y,errorx10,Target

