

	 --  NARMAX/GAMMALINE CLASSIFIER
	 --------------------------------------------------------------
	 display N3 |  display C8 |  display R |  scale=4
	 TMAX=PI/2 |  NN=25000
	 --------------------------------------------------------------
	 nx=4 |  --      number of input line neurons
	 nf=4 |  --       number of feedback-line neurons
	 nv=7 |  --      number of hidden-layer neurons
	 ARRAY y[1],deltay[1],error[1]
	 ARRAY x[nx]+x0[1]+feedback[nf]=xx |  x0[1]=1
	 ARRAY v[nv],deltav[nv]
	 ARRAY WW1[nv,nx+nf+1],W2[1,nv]
	 --
	 for i=1 to nv |  for k=1 to nx+nf+1 |  -- initialize
	     WW1[i,k]=0.1*ran()
	     next  |  next
	 --------------                           intentionally slow!
	 lrate1=0.01 |  lrate2=0.01
	 noise=0.00
	 mu=0.8 |  --                for gamma delay line
	 N=1 |  --               number of training runs
	 Switch=1
	 for i=1 to N |  drun  |  next
	 ---------
	 write 'type go for recall test' |  STOP
	 Switch=0
	 lrate1=0 |  lrate2=0 |  drun  |  -- test run
	 ------------------------------------------------------------------
	 DYNAMIC
	 ------------------------------------------------------------------
	 switch=swtch(sin(10*t)) |  --   alternate patterns
	 p=0.8*switch*cos(300*t) |  --              sine waves
	 q=(1-switch)*sgn(sin(100*t)) |  --   square waves
	 input=p+q+noise*ran()
	 target=input
	 ----
	 Vector x=x+mu*(x{-1}-x) |  x[1]=input |  --  gamma line
	 Vector v=tanh(WW1*xx) |  --               includes bias
	 Vector y=tanh(W2*v)
	 --
	 Vector feedback=feedback+mu*(feedback{-1}-feedback)
	 feedback[1]=Switch*target+(1-Switch)*y[1]
	 --
	 Vector error=target-y
	 Vector deltay=error*(1-y^2) |  --      backprop
	 Vector deltav=W2%*error*(1-v^2)
	 DELTA WW1=lrate1*deltav*xx
	 DELTA W2=lrate2*deltay*v
	 ----------------------------------------- rescaled stripchart
	 X=x[1]+0.7*scale |  Error=error[1]-0.5*scale
	 Y=y[1] |  Target=target+0.5*scale
	 dispt Target,Y,Error

