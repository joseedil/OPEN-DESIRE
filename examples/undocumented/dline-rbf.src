

	 --                  RECURRENT RBF PREDICTOR
	 --     predicts Lorenz-attractor time series
	 --------------------------------------------------------------
	 display N3 |  display C8 |  display R |  scale=2
	 TMAX=25 |  DT=0.0001 |  NN=TMAX/DT+1
	 --------------------------------------------------------------
	 m=50 |  -- predictor delay (try larger m, too!)
	 ARRAY signal[m]
	 --
	 nx=10 |  ARRAY x[nx] |  -- input delay line
	 nv=20 |  v[nv]+v0[1]=vv |  v0[1]=1 |  -- RBFs, bias
	 ARRAY y[1],error[1]
	 ARRAY WW[1,nv+1]
	 --
	 for k=1 to nv+2 |  -- initialize
	   WW[1,k]=0.1*ran()
	   next
	 ---------------------------------------------------------
	 ARRAY XX[nv-1,nv-1] |  -- RB centers
	 for i=1 to nv-1 |  for k=1 to nv-1
	     W[i,k]=nv+2*k-nv-1+(2*i-(nv-1))/
	     bb=5/(nv^2)
	     ---------------------------------------------------------
	     lrate=0.02 |  Tnoise=0.0
	     b=28 |  c=2.6667 |  A=10 |  -- for Lorenz system
	     -----------------------------------------------------------
	     N=4 |  --                number of training runs
	     for i=1 to N |  drun  |  next
	     ---------
	     write 'type go for prediction test' |  STOP
	     lrate=0 |  drun  |  -- test run
	     ------------------------------------------------------------
	     DYNAMIC
	     ------------------------------------------------------------
	     d/dt X=A*(Y-X)+0.001 |  --   Lorenz attractor
	     d/dt Y=X*(b-Z)-Y
	     d/dt Z=X*Y-c*Z
	     --------------------------------------------------------------
	     OUT  |  --   we use sampled data from now on!
	     target=0.05*X
	     Vector signal=signal{-1} |  signal[1]=target
	     --
	     Vector x=x{-1} |  x[1]=signal[m]
	     Vector v=exp(bb*(x[1]-X)*(X-x[1])) |  -- rb functions
	     Vector y=WW*vv
	     --
	     error[1]=target-y[1]
	     DELTA WW=lrate*error*vv
	     -----------------------------       stripchart-type display
	     yy=y[1]+0.5*scale |  TARGET=target+0.5*scale
	     error1=error[1]-0.5*scale
	     dispt yy,TARGET,error1

