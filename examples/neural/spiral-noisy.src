

	 --   SPIRAL-LEARNING COUNTERPROP NETWORK
	 --     in order, no noise, no normalization
	 --            try fast-learn mode, too!
	 ------------------------------------------------------------
	 display N1 |  display C8 |  display R
	 scale=1 |  null=0 |  minus=-1
	 ------------------------------------------------------------
	 ARRAY r[97],phi[97] |  -- pattern array for two spirals
	 ARRAY X[194,2]
	 ARRAY target[194,1]
	 for k=1 to 97
	   r[k]=0.8*(7+k)/104 |  phi[k]=PI*(97-k)/16
	   X[2*k,1]=r[k]*cos(phi[k]) |  X[2*k,2]=r[k]*sin(phi[k])
	   X[2*k-1,1]=-X[2*k,1] |  X[2*k-1,2]=-X[2*k,2]
	   target[2*k,1]=1 |  target[2*k-1,1]=0
	   next
	 ------------------------------------------------------------
	 N=260 |  --                               number of categories
	 ARRAY W[N,2] |  --                           template matrix
	 ARRAY x[2],w[2],v[N],h[N],U[1,N],y[1],error[1]
	 --
	 for i=1 to N |  for k=1 to 2 |  --               initialize
	     W[i,k]=ran()
	     next  |  next
	 ------------------------------------------------------------
	 --                                  set  learning parameters
	 lratex=0.3 |  lratef=1 |  nlearn=30
	 crit=0.00001
	 noise=0.01
	 ------------------------------------------------------------
	 NN=6000 |  --                            learn input, output
	 drun
	 write "type go to continue" |  STOP
	 ------------------------------------------------------------
	 --                              run with test input (recall)
	 NN=20000 |  t=1
	 drun RECALL
	 ------------------------------------------------------------
	 DYNAMIC
	 ------------------------------------------------------------
	 iRow=t/nlearn |  Vector x=X#+noise*ran()
	 CLEARN v=W(x)lratex,crit |  --   learn/select input values
	 Vector error=target#-U*v |  --           counterpropagation
	 DELTA U=lratef*error*v
	 Vector w=W%*v |  --  reconstruct selected templates
	 dispxy w[1],w[2]
	 -----------------------------------------------------------
	    label RECALL
	 --                                                test run (no lea
	 Vector x=ran() |  --                            test input
	 CLEARN v=W(x)null,minus |  --             select
	 Vector y=U*v |  --               counterpropagation outstar
	 Vector x=y[1]*x |  --               suppresses display if 0
	 dispxy x[1],x[2]

