

	 --                                 COMPETITIVE LEARNING
	 -------------------------------------------------------
	 m=2 |  --                              number of inputs
	 nn=5 |  N=nn*nn |  --                number of patterns         
	 n=25 |  --             no. of competitive-layer neurons          
	 --
	 ARRAY x[m],v[n],h[n],w[m],W[n,m],INPUT[N,2]
	 -------------------------------------------------------
	 --              set up uniformly spaced cluster centers
	 s=0.75
	 for i=1 to nn |  for k=1 to nn
	     INPUT[i+(k-1)*nn,1]=s*(1+nn-2*i)/(1-nn)
	     INPUT[i+(k-1)*nn,2]=s*(1+nn-2*k)/(1-nn)
	     next  |  next
	 -------------------------------------------------------
	 for i=1 to n
	   for k=1 to m |  --        set random initial weights
	     W[i,k]=0.01*ran()
	     next
	   h[i]=0 |  --          initialiwe conscience (if any)
	   next
	 display N1 |  display C8
	 ------------------------------------------------------
	 --                           set experiment parameters
	 crit=-0 |  --                             CLEARN  mode
	 lrate=0.08 |  kappa=0.99 |  lrate0=0.002
	 noise=0.05
	 NN=50000
	 ------------------------------------------------------
	 drun  |  --                 "continued" runs show
	 -- drun  |  drun  |  --              progress more clearly!
	 --
	 write 'type go for a check run' |  STOP
	 ------------------------------------------------------
	 --                                   make a recall run
	 lrate=0 |  lrate0=0
	 for i=1 to n |  h[i]=1.0E-25 |  next
	 drun
	 ONE=0 |  H=0 |  --     initialiwe checksum and entropy
	 a=1/NN
	 for i=1 to n
	   h[i]=a*h[i] |  --   statistical relative frequencies
	   ONE=ONE+h[i] |  --               accumulate checksum
	   H=H-h[i]*ln(h[i]) |  --           accumulate entropy
	   next
	 -----------------------------          display results
	 write h |  write
	 write 'H =  ';H/ln(2);' bits','      checksum =  ';ONE
	 write 'log2(N) = ';ln(N)/ln(2)
	 STOP
	 ------------------------------------------------------
	    label eee
	 --                            parameter-editing screen
	 edit 450-480,560
	 ------------------------------------------------------
	 DYNAMIC
	 ------------------------------------------------------
	 --                                 weight-learning run
	 lrate=lrate*kappa+lrate0 |  --     decrease learn rate
	 iRow=t
	 Vector x=noise*(ran()+ran()+ran())+INPUT#
	 CLEARN v=W(x)lrate,crit |  --            compete,learn
	 Vectr delta h=v |  --                      FSCL when crit=0
	 Vector w=W%*v |  --              reconstruct templates
	 DISPXY w[1],w[2],x[1],x[2]

